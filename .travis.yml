language: cpp

# against hwloc error (travis-ci/travis-ci#10019)
sudo: required

stages:
  - canary
  - test

jobs:
    include:
        - stage: canary
          env: BACKENDS="OpenMP"

addons:
  apt:
    sources:
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
      - ccache
      - libhwloc-dev
      - libopenmpi-dev
      - openmpi-bin
      - g++-6
      - libfftw3-dev

before_script:
  - ccache -z
  - KOKKOS_OPTS=( -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DKokkos_ENABLE_HWLOC=ON -DKokkos_CXX_STANDARD=14 )
  - for i in ${BACKENDS}; do KOKKOS_OPTS+=( -DKokkos_ENABLE_${i^^}=ON ); done
  - for i in ${BACKENDS}; do CABANA_OPTS+=( -DCabana_REQUIRE_${i}=ON ); done
  - for i in ${BACKENDS}; do CABANAMD_OPTS+=( -DCabanaMD_REQUIRE_${i}=ON ); done
    # LD_LIBRARY_PATH workaround for libomp: https://github.com/travis-ci/travis-ci/issues/8613
  - if [[ ${CC} = clang ]]; then export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH; fi
  - if [[ ${CC} = gcc ]]; then export CXX=g++-6; export CC=gcc-6; export FC=gfortran-6; fi
  - pushd $HOME/build
  - git clone --depth=1 https://github.com/kokkos/kokkos.git &&
    pushd kokkos && mkdir build && pushd build &&
    cmake -DCMAKE_INSTALL_PREFIX=$HOME/kokkos ${KOKKOS_OPTS[@]} .. &&
    make -j2 VERBOSE=1 && make install &&
    popd && popd
  - pwd
  - if [[ ${LongRange} ]]; then
       git clone --depth=1  https://bitbucket.org/icl/heffte.git &&
       pushd heffte && mkdir build && pushd build &&
       cmake -DCMAKE_INSTALL_PREFIX="$HOME/heffte"
          -DCMAKE_CXX_STANDARD="11"
          -DBUILD_SHARED_LIBS=ON
          -DHeffte_ENABLE_FFTW=ON .. &&
       make -j2 VERBOSE=1 && make install &&
       popd && popd;
       git clone --depth=1 https://github.com/ECP-copa/Cabana.git
       pushd Cabana && mkdir build && pushd build &&
       cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_PREFIX_PATH="$HOME/kokkos;$HOME/heffte"
          -DCMAKE_INSTALL_PREFIX=$HOME/Cabana
          -DCabana_REQUIRE_SERIAL=OFF
          ${CABANA_OPTS[@]}
          -DCabana_ENABLE_MPI=ON
          -DCabana_ENABLE_CAJITA=ON
          -DCabana_ENABLE_HEFFTE=ON
          -DCabana_ENABLE_TESTING=OFF -DCabana_ENABLE_EXAMPLES=OFF
          -DCabana_ENABLE_PERFORMANCE_TESTING=OFF .. &&
       make -k -j2 VERBOSE=1 && make install &&
       popd && popd;
    fi
  - if [ NOT [ ${LongRange} ] ]; then
       git clone --depth=1 https://github.com/ECP-copa/Cabana.git
       pushd Cabana && mkdir build && pushd build &&
       cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_PREFIX_PATH="$HOME/kokkos"
          -DCMAKE_INSTALL_PREFIX=$HOME/Cabana
          -DCabana_REQUIRE_SERIAL=OFF
          ${CABANA_OPTS[@]}
          -DCabana_ENABLE_MPI=ON
          -DCabana_ENABLE_TESTING=OFF -DCabana_ENABLE_EXAMPLES=OFF
          -DCabana_ENABLE_PERFORMANCE_TESTING=OFF .. &&
       make -k -j2 VERBOSE=1 && make install &&
       popd && popd;
    fi
  - if [[ ${NNP} ]]; then
      git clone --depth=1 https://github.com/CompPhysVienna/n2p2.git &&
      pushd n2p2 && pushd src &&
      make libnnp &&
      popd && popd;
    fi
  - if [[ ${COVERAGE} ]]; then
       pip install --user coverxygen &&
       mkdir -p $HOME/.local/bin && wget -O $HOME/.local/bin/codecov https://codecov.io/bash && chmod +x $HOME/.local/bin/codecov;
    fi
  - popd

env:
  global:
    - CCACHE_CPP2=yes
  matrix:
    - BACKENDS="OPENMP"
    - BACKENDS="SERIAL"
    - BACKENDS="OPENMP" NNP=ON
    - BACKENDS="SERIAL" NNP=ON
    - BACKENDS="OPENMP" LongRange=ON
    - BACKENDS="SERIAL" LongRange=ON
    - BACKENDS="OPENMP" LongRange=ON NNP=ON
    - BACKENDS="SERIAL" LongRange=ON NNP=ON

script:
  - mkdir build && pushd build &&
    cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror"
          -DCMAKE_PREFIX_PATH="$HOME/Cabana;$HOME/kokkos"
          -DCabanaMD_ENABLE_TESTING=ON
          -DCabanaMD_REQUIRE_SERIAL=OFF
          -DCabanaMD_ENABLE_NNP=${NNP}
          -DCabanaMD_ENABLE_LongRange=${LongRange}
          -DN2P2_DIR=$HOME/build/n2p2
          ${CABANAMD_OPTS[@]}
          .. &&
    make -j4 VERBOSE=1 &&
    make test CTEST_OUTPUT_ON_FAILURE=1 &&
    make format && git diff --exit-code &&
    popd

after_success:
  - ccache -s
  - if [[ ${COVERAGE} ]]; then pwd && pushd build && pwd &&
    codecov -x gcov-6; fi

branches:
  only:
  - master
  - longrange_testing

cache:
  directories:
    - $HOME/.ccache

compiler:
  - gcc
  - clang
